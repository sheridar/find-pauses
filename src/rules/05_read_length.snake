# ===== Rules filtering reads based on length ==================================


# Divide reads by length
rule read_length:
    input:
        RESULTS + "/{sample}/{sample}.bed.gz"
    output:
        short = RESULTS + "/{sample}/metaplot_beds/read_lengths/{sample}_" + LENGTHS[0] + ".bed.gz",
        long  = RESULTS + "/{sample}/metaplot_beds/read_lengths/{sample}_" + LENGTHS[1] + ".bed.gz",
    params:
        job_name = "{sample}_read_length",
        memory   = 16,
        len      = 40
    log:
        out = RESULTS + "/logs/{sample}_read_length.out",
        err = RESULTS + "/logs/{sample}_read_length.err"
    message:
        "Dividing {wildcards.sample} reads by length"
    threads:
        6
    shell:
        """
        tmp_dir=$(dirname {output.short})
        tmp_s=$(mktemp -p $tmp_dir short.XXXXX)
        tmp_l=$(mktemp -p $tmp_dir long.XXXXX)

        zcat {input} \
            | awk -v s=$tmp_s -v l=$tmp_l '{{
                if ($7 > {params.len}) {{
                    print $0 >> l
                }} else {{
                    print $0 >> s
                }}
            }}'

        cat $tmp_s \
            | sort -S1G --parallel={threads} -k1,1 -k2,2n \
            | pigz -p {threads} \
            > {output.short}

        cat $tmp_l \
            | sort -S1G --parallel={threads} -k1,1 -k2,2n \
            | pigz -p {threads} \
            > {output.long}

        rm $tmp_s $tmp_l
        """


# Intersect short reads with gene regions
rule length_metaplot_beds:
    input:
        RESULTS + "/{sample}/metaplot_beds/read_lengths/{sample}_{length}.bed.gz",
    output:
        S    = RESULTS + "/{sample}/metaplot_beds/read_lengths/{sample}_{region}_{length}_S.bed.gz",
        AS   = RESULTS + "/{sample}/metaplot_beds/read_lengths/{sample}_{region}_{length}_AS.bed.gz",
        S_N  = RESULTS + "/{sample}/metaplot_beds/read_lengths/{sample}_{region}_{length}_S_N.bed.gz",
        AS_N = RESULTS + "/{sample}/metaplot_beds/read_lengths/{sample}_{region}_{length}_AS_N.bed.gz",
    params:
        job_name = "{sample}_{region}_{length}_metaplot_beds",
        memory   = 16,
        bed      = lambda wildcards: LEN_BEDS[wildcards.region]
    log:
        out = RESULTS + "/logs/{sample}_{region}_{length}_metaplot_beds.out",
        err = RESULTS + "/logs/{sample}_{region}_{length}_metaplot_beds.err"
    message:
        "Intersecting {wildcards.length} reads for {wildcards.sample} {wildcards.region}"
    threads:
        6
    shell:
        """
        source src/funs.sh

        intersect_reads \
            {input} \
            {params.bed} \
            {threads} \
            {output.S} \
            {output.S_N} \
            "-wa -c -s"

        intersect_reads \
            {input} \
            {params.bed} \
            {threads} \
            {output.AS} \
            {output.AS_N} \
            "-wa -c -S"
        """


