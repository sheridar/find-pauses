# ====== Rules for creating bigwigs files from aligned reads ===================


# Create bigwigs using single bp read coordinates 
# Do not reverse strands since read #1 from QIA-seq libraries is the sense
# direction
rule bigwigs_nosub:
    input:
        RESULTS + "/{sample}/{sample}_shift.bed.gz"
    output:
        p_bg   = temp_fn(RESULTS + "/{sample}/{sample}_pos.bedgraph.gz"),
        p_bg_N = temp_fn(RESULTS + "/{sample}/{sample}_pos_N.bedgraph.gz"),
        n_bg   = temp_fn(RESULTS + "/{sample}/{sample}_neg.bedgraph.gz"),
        n_bg_N = temp_fn(RESULTS + "/{sample}/{sample}_neg_N.bedgraph.gz"),

        p_bw   = RESULTS + "/{sample}/{sample}_pos.bw",
        n_bw   = RESULTS + "/{sample}/{sample}_neg.bw"
    params:
        job_name = "{sample}_bigwig",
        memory   = 8,
        chroms   = CHROMS
    log:
        out = RESULTS + "/logs/{sample}_bigwig.out",
        err = RESULTS + "/logs/{sample}_bigwig.err"
    benchmark:
        RESULTS + "/benchmarks/{sample}_bigwig.tsv"
    message:
        "Creating bigwigs for {wildcards.sample}"
    threads:
        6
    shell:
        """
        source {SRC}/funs.sh
        
        # Create bigwigs for each strand
        # Normalized by the number of reads in the starting bed file (RPM)
        create_bigwig \
            {input} \
            "-strand +" \
            1 \
            {output.p_bg} \
            {output.p_bg_N} \
            {output.p_bw} \
            {params.chroms} \
            {threads}

        create_bigwig \
            {input} \
            "-strand -" \
            -1 \
            {output.n_bg} \
            {output.n_bg_N} \
            {output.n_bw} \
            {params.chroms} \
            {threads}
        """


# Create IGV browser session
rule igv_browser_nosub:
    input:
        pos = expand(
            RESULTS + "/{sample}/{sample}_pos.bw",
            sample = SAMS_UNIQ
        ),
        neg = expand(
            RESULTS + "/{sample}/{sample}_neg.bw",
            sample = SAMS_UNIQ
        )
    output:
        urls = RESULTS + "/urls/" + PROJ + "_nosub_urls.tsv",
        xml  = RESULTS + "/urls/" + PROJ + "_nosub_igv.xml"
    params:
        job_name = PROJ + "nosub_igv",
        memory   = 4,
        url      = URL,
        ssh      = SSH
    log:
        out = RESULTS + "/logs/" + PROJ + "_igv.out",
        err = RESULTS + "/logs/" + PROJ + "_igv.err"
    benchmark:
        RESULTS + "/benchmarks/" + PROJ + "_igv.tsv"
    message:
        "Creating " + PROJ + " IGV session without subsampling"
    threads:
        1
    shell:
        """
        source {SRC}/funs.sh

        create_urls \
            "{input.pos}" \
            {params.ssh} \
            {params.url} \
            {output.urls}

        create_urls \
            "{input.neg}" \
            {params.ssh} \
            {params.url} \
            {output.urls}

        # Create IGV session
        {SRC}/write_igv_xml.py \
            {output.urls} \
            {output.xml}
        """

 
# Create bigwigs using reads that have not been filtered based on
# proximity to protein coding genes and have not been subsampled
rule bigwigs_nofilt:
    input:
        RESULTS + "/{sample}/{sample}_nofilt.bed.gz"
    output:
        p_bg   = temp_fn(RESULTS + "/{sample}/{sample}_nofilt_pos.bedgraph.gz"),
        p_bg_N = temp_fn(RESULTS + "/{sample}/{sample}_nofilt_pos_N.bedgraph.gz"),
        n_bg   = temp_fn(RESULTS + "/{sample}/{sample}_nofilt_neg.bedgraph.gz"),
        n_bg_N = temp_fn(RESULTS + "/{sample}/{sample}_nofilt_neg_N.bedgraph.gz"),

        p_bw   = RESULTS + "/{sample}/{sample}_nofilt_pos.bw",
        n_bw   = RESULTS + "/{sample}/{sample}_nofilt_neg.bw"
    params:
        job_name = "{sample}_nofilt_bigwig",
        memory   = 8,
        chroms   = CHROMS
    log:
        out = RESULTS + "/logs/{sample}_nofilt_bigwig.out",
        err = RESULTS + "/logs/{sample}_nofilt_bigwig.err"
    benchmark:
        RESULTS + "/benchmarks/{sample}_nofilt_bigwig.tsv"
    message:
        "Creating nofilt bigwigs for {wildcards.sample}"
    threads:
        6
    shell:
        """
        source {SRC}/funs.sh

        # Create bigwigs for each strand
        # Normalized by the number of reads in the starting bed file (RPM)
        create_bigwig \
            {input} \
            "-strand +" \
            1 \
            {output.p_bg} \
            {output.p_bg_N} \
            {output.p_bw} \
            {params.chroms} \
            {threads}

        create_bigwig \
            {input} \
            "-strand -" \
            -1 \
            {output.n_bg} \
            {output.n_bg_N} \
            {output.n_bw} \
            {params.chroms} \
            {threads}
        """


# Create IGV browser session
rule igv_browser_nofilt:
    input:
        pos = expand(
            RESULTS + "/{sample}/{sample}_nofilt_pos.bw",
            sample = SAMS_UNIQ
        ),
        neg = expand(
            RESULTS + "/{sample}/{sample}_nofilt_neg.bw",
            sample = SAMS_UNIQ
        )
    output:
        urls = RESULTS + "/urls/" + PROJ + "_nofilt_urls.tsv",
        xml  = RESULTS + "/urls/" + PROJ + "_nofilt_igv.xml"
    params:
        job_name = PROJ + "nofilt_igv",
        memory   = 4,
        url      = URL,
        ssh      = SSH
    container:
        None
    log:
        out = RESULTS + "/logs/" + PROJ + "nofilt_igv.out",
        err = RESULTS + "/logs/" + PROJ + "nofilt_igv.err"
    benchmark:
        RESULTS + "/benchmarks/" + PROJ + "nofilt_igv.tsv"
    message:
        "Creating " + PROJ + " IGV session without filtering and subsampling"
    threads:
        1
    shell:
        """
        source {SRC}/funs.sh

        create_urls \
            "{input.pos}" \
            {params.ssh} \
            {params.url} \
            {output.urls}

        create_urls \
            "{input.neg}" \
            {params.ssh} \
            {params.url} \
            {output.urls}

        # Create IGV session
        {SRC}/write_igv_xml.py \
            {output.urls} \
            {output.xml}
        """


