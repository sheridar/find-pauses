# ====== Rules for creating bigwigs files from aligned reads ===================


# Create bigwigs using single bp read coordinates 
# Do not reverse strands since read #1 from QIA-seq libraries is the sense
# direction
rule bigwigs:
    input:
        RESULTS + "/{sam_grp}/{sam_grp}.bed.gz"
    output:
        p_bg   = temp_fn(RESULTS + "/{sam_grp}/{sam_grp}_pos.bedgraph.gz"),
        p_bg_N = temp_fn(RESULTS + "/{sam_grp}/{sam_grp}_pos_N.bedgraph.gz"),
        n_bg   = temp_fn(RESULTS + "/{sam_grp}/{sam_grp}_neg.bedgraph.gz"),
        n_bg_N = temp_fn(RESULTS + "/{sam_grp}/{sam_grp}_neg_N.bedgraph.gz"),

        p_bw   = RESULTS + "/{sam_grp}/{sam_grp}_pos.bw",
        n_bw   = RESULTS + "/{sam_grp}/{sam_grp}_neg.bw"
    params:
        job_name = "{sam_grp}_bigwig",
        chroms   = CHROMS
    resources:
        mem_mb = _get_mem(0.5, 1000),
        mem_gb = _get_mem(0.5)
    log:
        out = RESULTS + "/logs/{sam_grp}_bigwig.out",
        err = RESULTS + "/logs/{sam_grp}_bigwig.err"
    benchmark:
        RESULTS + "/benchmarks/{sam_grp}_bigwig.tsv"
    threads:
        6
    shell:
        """
        source '{SRC}/funs.sh'
        
        # Create bigwigs for each strand
        # Normalized by the number of reads in the starting bed file (RPM)
        create_bigwig \
            '{input}' \
            '-strand +' \
            1 \
            '{output.p_bg}' \
            '{output.p_bg_N}' \
            '{output.p_bw}' \
            '{params.chroms}' \
            {threads}

        create_bigwig \
            '{input}' \
            '-strand -' \
            -1 \
            '{output.n_bg}' \
            '{output.n_bg_N}' \
            '{output.n_bw}' \
            '{params.chroms}' \
            {threads}
        """


# Create IGV browser session
SSH_PARAMS = {
    "url":         URL,
    "ssh":         SSH,
    "ssh_key_dir": SSH_KEY_DIR
}

rule igv_browser:
    input:
        expand(
            RESULTS + "/{sam_grp}/{sam_grp}_{strand}.bw",
            sam_grp = SAM_GRPS, strand = ["pos", "neg"]
        )
    output:
        urls = RESULTS + "/urls/" + PROJ + "_urls.tsv",
        xml  = RESULTS + "/urls/" + PROJ + "_igv.xml"
    params:
        job_name = PROJ + "_igv",
        regex    = GRP_REGEX,
        **SSH_PARAMS
    resources:
        mem_mb = _get_mem(0.25, 1000),
        mem_gb = _get_mem(0.25)
    log:
        out = RESULTS + "/logs/" + PROJ + "_igv.out",
        err = RESULTS + "/logs/" + PROJ + "_igv.err"
    threads:
        1
    shell:
        """
        source '{SRC}/funs.sh'

        create_urls \
            '{input}' \
            '{params.ssh}' \
            '{params.ssh_key_dir}' \
            '{params.url}' \
            '{output.urls}' \
            '{params.regex}'

        # Create IGV session
        '{SRC}/write_igv_xml.py' \
            '{output.urls}' \
            '{output.xml}'
        """

 
